table(Titanic_complete$SibSp)
layout(matrix(c(1,3,2,3), 2, 2, byrow = TRUE))
hist(Titanic_complete$SibSp ,col="blue",main=" Histograma SibSp ",breaks =10)
plot(density(Titanic_complete$SibSp),main="Densidad Sibsp")
boxplot(Titanic_complete$SibSp ,main="Boxplot Sibsp")
SibSp.outlier <-length(boxplot.stats(Titanic_complete$SibSp)$out)
paste("los valores atípicos de acuerdo a la función boxplot.stats: ",SibSp.outlier)
table(Titanic_complete$Parch)
layout(matrix(c(1,3,2,3), 2, 2, byrow = TRUE))
hist(Titanic_complete$Parch ,col="blue",main=" Histograma Parch ",breaks =10)
plot(density(Titanic_complete$Parch),main="Densidad Parch")
boxplot(Titanic_complete$Parch ,main="Boxplot Parch")
Parch.outlier <-length(boxplot.stats(Titanic_complete$Parch)$out)
paste("los valores atípicos de acuerdo a la función boxplot.stats: ",Parch.outlier)
Fare.outlier <-length(boxplot.stats(Titanic_complete$Fare)$out)
paste("los valores atípicos son: ",
Fare.outlier)
layout(matrix(c(1,3,2,3), 2, 2, byrow = TRUE))
hist(Titanic_complete$Fare ,col="blue",main=" Histograma Fare ",breaks =30)
plot(density(Titanic_complete$Fare),main="Densidad Fare")
boxplot(Titanic_complete$Fare ,main="Boxplot Fare")
Titanic_complete[Titanic_complete$Fare>400,]
Titanic_complete[Titanic_complete$Ticket=="PC 17755",]
length(unique(Titanic_complete$PassengerId))
#divido la variable name en dos nuevas columnas una para el apellido
#y la otra para el título
vars <- c("Surname","Name2")
Titanic_complete<- separate(Titanic_complete, Name, into = vars,
sep = c(","), remove=FALSE,extra ="drop")%>%
separate(Name2, into = c("Title","namerest"), sep = c(". "),
extra="warn")
#elimino la columna residual del nombre que se ha generado al crear dos columnas
#más una para el apellido y otra para el título
Titanic_complete$namerest<-NULL
# compruebo el dataframe actualizado con los cambios
head(Titanic_complete)
Titanic_complete$Title<- str_trim(Titanic_complete$Title)
Titanic_complete$Surname<- as.factor(str_trim(Titanic_complete$Surname))
#revisión de registro con titulo no reconocible
Titanic_complete[Titanic_complete$Title=="th",]
#agrupación de categorías.
Titanic_complete$Title[Titanic_complete$Title %in%
c('Capt','Col','Dr','Major',
'Rev','Master','Don','Jonkheer',
'Sir','Lady','Dona','th')] <-"elite"
Titanic_complete$Title[Titanic_complete$Title %in%
c('Miss', 'Ms', 'Mlle','Mr',
'Mrs','Mme')]<- 'non_elite'
Titanic_complete$Title<-as.factor(Titanic_complete$Title)
table(Titanic_complete$Title)
#creo la variable Family.unit
Titanic_complete$Family.unit<-Titanic_complete$SibSp+
Titanic_complete$Parch+1
#compruebo que la variaable se ha creado correctamente
head(Titanic_complete)
str(Titanic_complete)
summary(Titanic_complete)
#identificación de las variables factor y variables numericas
id.factor<- c(2,3,5,6,7,14,16)
id.numeric2<- c(8,9,10,12,17)
id.numeric<-c(8,9,10,12)
var.factor<-colnames(Titanic_complete)[id.factor]
var.numeric2<-colnames(Titanic_complete)[id.numeric2]#incluye family.unit
var.numeric<-colnames(Titanic_complete)[id.numeric]#no incluye family.unit
head(Titanic_complete[var.factor])
head(Titanic_complete[var.numeric])
#Histogramas para variables numéricas(cuantitativas), esta revisión nos servirá también
#para evaluar la normalidad de las variables, lo que se verá al detalle en el punto 4.2
require(gridExtra)
ggplot(Titanic_complete,aes(x=Age)) +
geom_histogram( binwidth=1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Age") +theme(plot.title = element_text(size=15))
plot1<-ggplot(Titanic_complete,aes(x=SibSp)) +
geom_histogram( binwidth=0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("SibSp") +theme(plot.title = element_text(size=15))
plot2<-ggplot(Titanic_complete,aes(x=Parch)) +
geom_histogram( binwidth=0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Parch") +theme(plot.title = element_text(size=15))
plot3<-ggplot(Titanic_complete,aes(x=Family.unit)) +
geom_histogram( binwidth=0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Family.unit") +theme(plot.title = element_text(size=15))
plot4<-ggplot(Titanic_complete,aes(x=Fare)) +
geom_histogram( binwidth=10, fill="#69b3a2", color="#e9ecef", alpha=0.9) +ggtitle("Fare") +
theme(plot.title = element_text(size=15))
grid.arrange(plot1,plot2,plot3,plot4, ncol=2)
library(GGally)
require(gridExtra)
#matriz de correlaciones
cor(Titanic_complete[var.numeric])
#gráfico de correlaciones para todas las variables numéricas
plot5<-ggcorr(Titanic_complete[var.numeric])
#gráfico de correlaciones excluyendo nueva variable "Family.unit"
plot6<-ggcorr(Titanic_complete[var.numeric2])
grid.arrange(plot5,plot6, ncol=2)
#correlación entre Age y Fare
cor.test(Titanic_complete$Age,Titanic_complete$Fare, method="spearman")
#correlación entre SibSp y Parch
cor.test(Titanic_complete$SibSp,Titanic_complete$Parch, method="spearman")
cor.test(Titanic_complete$SibSp,Titanic_complete$Parch, method="spearman")
#representación de las relaciones entre variables que estamos considerando de cara al modelo
plot( Titanic_complete$Age ~ Titanic_complete$Family.unit, main="Age vs Family.unit" )
plot( Titanic_complete$Age ~ Titanic_complete$Fare, main="Age vs Fare" )
plot( Titanic_complete$Fare ~ Titanic_complete$Family.unit, main="Fare vs Family.unit" )
#Utilizo el modelo de componentes principales PCA
pca<-prcomp(as.matrix(Titanic_complete[var.numeric]),scale=TRUE,center = TRUE)
#Con la función summary puedo ver la variabilidad acumulada con las variables
#y de ahí es claro determinar que con 4 PCA explicamos la variabilidad completa
#(recordemos que la variable Family Unit era una combinación de otras dos variables)
#y con 3 PCA  explicamos el 84% de la variabilidad
summary(pca)
#Añado los 3 componentes principales al dataframe.
#Esto reduciría nuestras 5 variables numéricas a solo 3.
Titanic_complete<-cbind(Titanic_complete,pca$x[,1:3])
head(Titanic_complete)
#De  cara a facilitar analisis posteriores y la interpretación de  resultados
#En caso de que opte por continuar el análisis con PCA,
#voy a revisar las relaciones que hay entre PCA y las variables de partida
#Para ello debo estudiar las posibles correlaciones entre PCA y las variables de Partida.
cor(Titanic_complete[var.numeric],pca$x[,1:3])
#librerias necesarias
library(dplyr)
library(tidyverse)
library(ggplot2)
library(hrbrthemes)
library(viridis)
#Cargar datos y primera revisión
Titanic_train<- read.csv(
paste("C:/Users/mila_/Documents/Master ciencia de dades",
"/Tipología y ciclo de vida de los datos/PRAC 2/train.csv",sep=""),
header=TRUE)
Titanic_test<- read.csv(
paste("C:/Users/mila_/Documents/Master ciencia de dades",
"/Tipología y ciclo de vida de los datos/PRAC 2/test.csv",sep = ""),
header=TRUE)
str(Titanic_train)
str(Titanic_test)
# En este apartado además quiero conocer la identidad del pasajero 892
Titanic_test[Titanic_test$PassengerId==892,]
#Revisión de columnas en dataframes
colnames(Titanic_train)
colnames(Titanic_test)
paste("Los valores NA para variable Survived rn train son:",sum(is.na(Titanic_train$Survived)))
#nueva columna en test dataframe
Titanic_test$Survived <- NA
#nueva columna Set_type para separar dataframes más adelante
Titanic_test$Set_type<- "test"
Titanic_train$Set_type<- "train"
#combinación de datasets
Titanic_complete<- rbind(Titanic_train, Titanic_test)
#compruebo las filas del nuevo dataframe para ver si es correcto.
paste("Número de filas de Dataframe Titanic_complete:",nrow(Titanic_complete))
#preliminar analysis of dataframe variables and dimensions
str(Titanic_complete)
#cambio de variables texto a variables factor.
for (i in seq_along(Titanic_complete[,c(2,3,5,9,11,12,13)])) {
Titanic_complete[,c(2,3,5,9,11,12,13)][[i]] <- as.factor(Titanic_complete[,c(2,3,5,9,11,12,13)][[i]])
}
#comprobació de que el cambio es efectivo
unlist(lapply(Titanic_complete[,c(2,3,5,9,11,12,13)], class), use.names = TRUE)
#summary of variables
summary(Titanic_complete)
#hecha la comprobación la única variable en la que es extraño encontrar valores 0 es en Fare.
#ya que esto implica una tarifa gratuita, lo cual es extraño
#contabilizo el número de 0 para esta variable con el siguiente comando.
paste("número de registros con valor zero en la tarifa:",length(Titanic_complete[Titanic_complete$Fare==0,]))
#comprobación de variables categóricas Cabin y TIcket,el primer dataframe corresponde
#a Ticket y el segundo a Cabin
id.ticket_Cabin<-c(9,11)
var_ticket_Cabin<-colnames(Titanic_complete)[id.ticket_Cabin]
for (i in var_ticket_Cabin){
print(tail(as.data.frame(table(Titanic_complete[i]))))
}
#Búsqueda de los pasajeros con valores missing
Titanic_complete[Titanic_complete$Embarked=="",]
#Busqueda de otros pasajeros con misma cabina o número de ticket.
Titanic.embarked<-Titanic_complete[Titanic_complete$PassengerId!=62 &
Titanic_complete$PassengerId!=830,]
Titanic.embarked[Titanic.embarked$Cabin=="B28",]
Titanic.embarked[Titanic.embarked$Ticket==113572,]
#Puertos de embarque segun clase
table(Titanic.embarked$Pclass,Titanic.embarked$Embarked)
#creo un dataframe accesorio que no incluya a los pasajeros con variabales missing
Titanic.embarked<-filter(Titanic.embarked[Titanic.embarked$Pclass==1
& Titanic.embarked$Embarked!="Q"
& Titanic.embarked$Fare<300,])
Titanic.embarked<-Titanic.embarked %>%
filter_all(~ !is.na(.))
nf <- layout(matrix(c(1,2,1,2,1,2),ncol=4), widths=c(10,10), heights=c(15,15), TRUE)
boxplot(Titanic.embarked$Fare ~ Titanic.embarked$Embarked, horizontal = TRUE,
ylim = c(0,300))
#representación de tarifas en relación al puerto de embarque
hist(Titanic.embarked[Titanic.embarked$Embarked=="C","Fare"],
breaks=30,xlim=c(0,300), col=rgb(1,0,0,0.5),
xlab="fare", main="payment of passanger embarked on c & s")
hist(Titanic.embarked[Titanic.embarked$Embarked=="S","Fare"],
breaks=30,xlim=c(0,300), col=rgb(0,0,1,0.5), add=T)
legend("topleft", legend=c("port C","port S"),
col=c(rgb(1,0,0,0.5),
rgb(0,0,1,0.5)), pt.cex=2, pch=15 )
#Recuento en dataframe original Titanic_complete
Titanic_complete[Titanic_complete$Embarked=="","Embarked"]<-"S"
table(Titanic_complete$Embarked)
#compruebo el registro completo que corresponde al dato perdido
Titanic_complete[is.na(Titanic_complete$Fare),]
#compruebo en que valores de fare se concentran las tarifas para la tercera clase
Titanic.class<-filter(Titanic_complete[Titanic_complete$Pclass==3,])
ggplot(Titanic.class,aes(x=Fare))+geom_boxplot()
summary(Titanic.class$Fare)
#calculo de la mediana y reemplazo del valor missing
median.fare<-median(Titanic_complete$Fare, na.rm = TRUE)
Titanic_complete[is.na(Titanic_complete$Fare),"Fare"]<-median.fare
#comprobación de que ya no hay valores missing para Fare
sum(is.na(Titanic_complete$Fare))
#identificadores de los registros con missing data para la variable Age
id.mis.age <- which( is.na(Titanic_complete$Age))
plot(Titanic_complete[id.mis.age,"Survived"],col = rgb(1, 0, 1, 0.10))
#Distribución de las edades y resumen de los datos.
hist(Titanic_complete$Age,col = rgb(0, 1, 0, 0.10))
summary(Titanic_complete$Age,na.rm=TRUE)
#Calculo de valores random que se encuentren entr Q1 Y Q3.
Q1<-quantile(Titanic_complete$Age,na.rm = TRUE)[[2]]
Q3<-quantile(Titanic_complete$Age,na.rm = TRUE)[[4]]
n.row<-nrow(Titanic_complete[id.mis.age,])
valores<- sample(Q1:Q3,n.row,replace = TRUE)
#reemplazo los valores missing por el conjunto de valores random generados
Titanic_complete[id.mis.age,"Age"]<-valores
#compruebo que los  valores se han substituido correctamentamente contando los valores NA, para la variable Age
sum(is.na(Titanic_complete$Age))
summary(Titanic_complete$Age)
#Creo una nueva columna resumen de las cabinas solo con la letra.
#Buscando información sobre las cabinas la letra indica la cubierta en la que se encontraban.
#y nos puede servir para agrupar las cabinas.
Titanic_complete$CabinG <- substring(Titanic_complete$Cabin, 1, 1)
#compruebo que la nueva variable se ha creado correctamente con la función head
head(Titanic_complete)
#con las funciones table y addmargins compruebo la cantidad de registros
#que tengo para cada variable.
addmargins(addmargins(table(Titanic_complete$Pclass,Titanic_complete$CabinG),2),1)
#quiero verificar si los datos faltantes corresponden mayoritariamente a los pasajeros
#que no sobrevivieron al accidente por lo que creo una gráfica
plot(Titanic_complete[Titanic_complete$Cabin=="","Survived"],col = rgb(0, 1, 0, 0.10))
Titanic_complete$Cabin<-as.character(Titanic_complete$Cabin)
#substituyo los valores missing por una N
#De este modo se podrá trabajar con los demás y tal vez incluirlos en el modelo.
Titanic_complete[Titanic_complete$Cabin=="","Cabin"]<-"N"
Titanic_complete[Titanic_complete$CabinG=="","CabinG"]<-"N"
sum(is.na(Titanic_complete["Cabin"]))
sum(is.na(Titanic_complete["CabinG"]))
Titanic_complete$Cabin<-as.factor(Titanic_complete$Cabin)
Titanic_complete$CabinG<-as.factor(Titanic_complete$CabinG)
head(Titanic_complete)
#comparación del número de registros de variable fare=0 y
#número de registros correspondientes a los tickets
Titanic_complete[Titanic_complete$Fare==0,]
nrow(Titanic_complete[Titanic_complete$Fare==0,])
a<-unique(Titanic_complete[Titanic_complete$Fare==0,"Ticket"])
sum_final=0
for (i in a){
filas= nrow(Titanic_complete[Titanic_complete$Ticket==i,])
sum_final=sum_final+filas
}
sum_final
#recuento de posibles valores outliers
paste ("los valores atípicos encontrados de acuerdo a la función boxplot.stats:",
length(boxplot.stats(Titanic_complete$Age)$out))
#Gráfico boxplot y de densidades
Titanic_complete %>%
ggplot( aes(x=Sex,y=Age, fill=Sex)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Age Boxplot") +
xlab("")
ggplot(mapping = aes(x=Titanic_complete$Age))+geom_density()
table(Titanic_complete$SibSp)
layout(matrix(c(1,3,2,3), 2, 2, byrow = TRUE))
hist(Titanic_complete$SibSp ,col="blue",main=" Histograma SibSp ",breaks =10)
plot(density(Titanic_complete$SibSp),main="Densidad Sibsp")
boxplot(Titanic_complete$SibSp ,main="Boxplot Sibsp")
SibSp.outlier <-length(boxplot.stats(Titanic_complete$SibSp)$out)
paste("los valores atípicos de acuerdo a la función boxplot.stats: ",SibSp.outlier)
table(Titanic_complete$Parch)
layout(matrix(c(1,3,2,3), 2, 2, byrow = TRUE))
hist(Titanic_complete$Parch ,col="blue",main=" Histograma Parch ",breaks =10)
plot(density(Titanic_complete$Parch),main="Densidad Parch")
boxplot(Titanic_complete$Parch ,main="Boxplot Parch")
Parch.outlier <-length(boxplot.stats(Titanic_complete$Parch)$out)
paste("los valores atípicos de acuerdo a la función boxplot.stats: ",Parch.outlier)
Fare.outlier <-length(boxplot.stats(Titanic_complete$Fare)$out)
paste("los valores atípicos son: ",
Fare.outlier)
layout(matrix(c(1,3,2,3), 2, 2, byrow = TRUE))
hist(Titanic_complete$Fare ,col="blue",main=" Histograma Fare ",breaks =30)
plot(density(Titanic_complete$Fare),main="Densidad Fare")
boxplot(Titanic_complete$Fare ,main="Boxplot Fare")
Titanic_complete[Titanic_complete$Fare>400,]
Titanic_complete[Titanic_complete$Ticket=="PC 17755",]
length(unique(Titanic_complete$PassengerId))
#divido la variable name en dos nuevas columnas una para el apellido
#y la otra para el título
vars <- c("Surname","Name2")
Titanic_complete<- separate(Titanic_complete, Name, into = vars,
sep = c(","), remove=FALSE,extra ="drop")%>%
separate(Name2, into = c("Title","namerest"), sep = c(". "),
extra="warn")
#elimino la columna residual del nombre que se ha generado al crear dos columnas
#más una para el apellido y otra para el título
Titanic_complete$namerest<-NULL
# compruebo el dataframe actualizado con los cambios
head(Titanic_complete)
Titanic_complete$Title<- str_trim(Titanic_complete$Title)
Titanic_complete$Surname<- as.factor(str_trim(Titanic_complete$Surname))
#revisión de registro con titulo no reconocible
Titanic_complete[Titanic_complete$Title=="th",]
#agrupación de categorías.
Titanic_complete$Title[Titanic_complete$Title %in%
c('Capt','Col','Dr','Major',
'Rev','Master','Don','Jonkheer',
'Sir','Lady','Dona','th')] <-"elite"
Titanic_complete$Title[Titanic_complete$Title %in%
c('Miss', 'Ms', 'Mlle','Mr',
'Mrs','Mme')]<- 'non_elite'
Titanic_complete$Title<-as.factor(Titanic_complete$Title)
table(Titanic_complete$Title)
#creo la variable Family.unit
Titanic_complete$Family.unit<-Titanic_complete$SibSp+
Titanic_complete$Parch+1
#compruebo que la variaable se ha creado correctamente
head(Titanic_complete)
str(Titanic_complete)
summary(Titanic_complete)
#identificación de las variables factor y variables numericas
id.factor<- c(2,3,5,6,7,14,16)
id.numeric2<- c(8,9,10,12,17)
id.numeric<-c(8,9,10,12)
var.factor<-colnames(Titanic_complete)[id.factor]
var.numeric2<-colnames(Titanic_complete)[id.numeric2]#incluye family.unit
var.numeric<-colnames(Titanic_complete)[id.numeric]#no incluye family.unit
head(Titanic_complete[var.factor])
head(Titanic_complete[var.numeric])
#Histogramas para variables numéricas(cuantitativas), esta revisión nos servirá también
#para evaluar la normalidad de las variables, lo que se verá al detalle en el punto 4.2
require(gridExtra)
ggplot(Titanic_complete,aes(x=Age)) +
geom_histogram( binwidth=1, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Age") +theme(plot.title = element_text(size=15))
plot1<-ggplot(Titanic_complete,aes(x=SibSp)) +
geom_histogram( binwidth=0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("SibSp") +theme(plot.title = element_text(size=15))
plot2<-ggplot(Titanic_complete,aes(x=Parch)) +
geom_histogram( binwidth=0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Parch") +theme(plot.title = element_text(size=15))
plot3<-ggplot(Titanic_complete,aes(x=Family.unit)) +
geom_histogram( binwidth=0.5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Family.unit") +theme(plot.title = element_text(size=15))
plot4<-ggplot(Titanic_complete,aes(x=Fare)) +
geom_histogram( binwidth=10, fill="#69b3a2", color="#e9ecef", alpha=0.9) +ggtitle("Fare") +
theme(plot.title = element_text(size=15))
grid.arrange(plot1,plot2,plot3,plot4, ncol=2)
library(GGally)
require(gridExtra)
#matriz de correlaciones
cor(Titanic_complete[var.numeric])
#gráfico de correlaciones para todas las variables numéricas
plot5<-ggcorr(Titanic_complete[var.numeric])
#gráfico de correlaciones excluyendo nueva variable "Family.unit"
plot6<-ggcorr(Titanic_complete[var.numeric2])
grid.arrange(plot5,plot6, ncol=2)
#correlación entre Age y Fare
cor.test(Titanic_complete$Age,Titanic_complete$Fare, method="spearman")
#correlación entre SibSp y Parch
cor.test(Titanic_complete$SibSp,Titanic_complete$Parch, method="spearman")
cor.test(Titanic_complete$SibSp,Titanic_complete$Parch, method="spearman")
#representación de las relaciones entre variables que estamos considerando de cara al modelo
plot( Titanic_complete$Age ~ Titanic_complete$Family.unit, main="Age vs Family.unit" )
plot( Titanic_complete$Age ~ Titanic_complete$Fare, main="Age vs Fare" )
plot( Titanic_complete$Fare ~ Titanic_complete$Family.unit, main="Fare vs Family.unit" )
#Utilizo el modelo de componentes principales PCA
pca<-prcomp(as.matrix(Titanic_complete[var.numeric]),scale=TRUE,center = TRUE)
#Con la función summary puedo ver la variabilidad acumulada con las variables
#y de ahí es claro determinar que con 4 PCA explicamos la variabilidad completa
#(recordemos que la variable Family Unit era una combinación de otras dos variables)
#y con 3 PCA  explicamos el 84% de la variabilidad
summary(pca)
#Añado los 3 componentes principales al dataframe.
#Esto reduciría nuestras 5 variables numéricas a solo 3.
Titanic_complete<-cbind(Titanic_complete,pca$x[,1:3])
head(Titanic_complete)
#De  cara a facilitar analisis posteriores y la interpretación de  resultados
#En caso de que opte por continuar el análisis con PCA,
#voy a revisar las relaciones que hay entre PCA y las variables de partida
#Para ello debo estudiar las posibles correlaciones entre PCA y las variables de Partida.
cor(Titanic_complete[var.numeric],pca$x[,1:3])
#Barplot per variables categóricas
plot7<-ggplot(Titanic_complete,
aes(x=Survived))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
plot8<-ggplot(Titanic_complete,
aes(x=Pclass))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
plot9<-ggplot(Titanic_complete,
aes(x=Surname))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
grid.arrange(plot7,plot8,plot9, ncol=2)
plot10<-ggplot(Titanic_complete,
aes(x=Title))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
plot11<-ggplot(Titanic_complete,
aes(x=Sex))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
plot12<-ggplot(Titanic_complete,
aes(x=Embarked))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
grid.arrange(plot10,plot11,plot12, ncol=2)
plot13<-ggplot(Titanic_complete,
aes(x=CabinG))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
plot14<-ggplot(Titanic_complete[Titanic_complete$CabinG!="N",],
aes(x=CabinG))+geom_bar(color="blue",
fill=rgb(0.1,0.4,0.5,0.7))
grid.arrange(plot13,plot14, ncol=2)
#comparaciónes en formato tabla entre supervivencia y variables categóricas.
table(Titanic_complete$Survived,Titanic_complete$Pclass)
table(Titanic_complete$Survived,Titanic_complete$Title)
table(Titanic_complete$Survived,Titanic_complete$Sex)
table(Titanic_complete$Survived,Titanic_complete$Embarked)
table(Titanic_complete$Survived,Titanic_complete$CabinG)
aggregate(Titanic_complete[var.numeric2],list(Titanic_complete$Survived), mean)
head(Titanic_complete)
#Todos los test que planteo me dan el mismo resultado que las muestras no siguen una normal, a modo de ejemplo realizo los tests para Age y SibSp.
shapiro.test(Titanic_complete$Age)
#shapiro.test(Titanic_complete$Family.unit)
#shapiro.test(Titanic_complete$Fare)
par(mfrow=c(2,2))
qqnorm(Titanic_complete$Age, pch = 1, frame = FALSE, main="QQ plot Age")
qqline(Titanic_complete$Age, col = "steelblue", lwd = 2)
qqnorm(Titanic_complete$Family.unit, pch = 1, frame = FALSE, main="QQ plot Family.unit")
qqline(Titanic_complete$Family.unit, col = "steelblue", lwd = 2)
qqnorm(Titanic_complete$Fare, pch = 1, frame = FALSE, main="QQ plot Fare")
qqline(Titanic_complete$Fare, col = "steelblue", lwd = 2)
#Aunque finalmente he descartado continuar el modelo con variables PCA
#He hecho pruebas de normalidad para PCA
#(estas no serían necesarias pero he hecho algunas comprobaciones extras
#antes de descartar la opción de usar PCA).
par(mfrow=c(2,3))
qqnorm(Titanic_complete$PC1, pch = 1, frame = FALSE,main="QQ plot PC1")
qqline(Titanic_complete$PC1, col = "steelblue", lwd = 2)
qqnorm(Titanic_complete$PC2, pch = 1, frame = FALSE,main="QQ plot PC2")
qqline(Titanic_complete$PC2, col = "steelblue", lwd = 2)
qqnorm(Titanic_complete$PC3, pch = 1, frame = FALSE,main="QQ plot PC3")
qqline(Titanic_complete$PC3, col = "steelblue", lwd = 2)
hist(Titanic_complete$PC1, main="histograma PC1")
hist(Titanic_complete$PC2, main="histograma PC2")
hist(Titanic_complete$PC3, main="histograma PC3")
#En este caso se ve que el tercer componente principal
#e incluso podríamos decir que con el segundo hay aproximaciones a la normal
#Esto es posible que se de porque ambos componentes estan muy
#correlacionados con la edad que sí sigue una normal
#Antes de escalar y centrar los valores quiero mantener los datos
#originales en un dataframe accesorio
#para poder tenerlos disponibles de cara a la creación de visualizaciones
#del apartado 5, por lo que genero un dataframe accesorio al que llamaré #Titanic_complete_raw
Titanic_complete_raw<- Titanic_complete
#escalo y centro las variables
Titanic_complete$Age<-scale(Titanic_complete$Age,center = TRUE)
Titanic_complete$Fare<-scale(Titanic_complete$Fare,center = TRUE)
Titanic_complete$Family.unit<-scale(Titanic_complete$Family.unit,
center = TRUE)
par(mfrow=c(2,3))
qqnorm(Titanic_complete$Age, pch = 1, frame = FALSE,main="QQ plot Age")
qqline(Titanic_complete$Age, col = "steelblue", lwd = 2)
qqnorm(Titanic_complete$Fare, pch = 1, frame = FALSE,main="QQ plot Fare")
qqline(Titanic_complete$Fare, col = "steelblue", lwd = 2)
qqnorm(Titanic_complete$Family.unit, pch = 1, frame = FALSE,main="QQ plot Family.unit")
qqline(Titanic_complete$Family.unit, col = "steelblue", lwd = 2)
hist(Titanic_complete$Age, main="histograma Age")
hist(Titanic_complete$Fare, main="histograma Fare")
hist(Titanic_complete$Family.unit, main="histograma Family.unit")
library(car)
fligner.test(Age ~ Set_type, data = Titanic_complete)
fligner.test(Fare ~ Set_type, data = Titanic_complete)
fligner.test(Family.unit ~ Set_type, data = Titanic_complete)
#Selección de variables predictoras a incluir en el modelo
Titanic_complete<-Titanic_complete[, c(1,2,3,6,7,8,12,15,17)]
#guardo el dataset con variables seleccionadas y limpieza
write.csv(Titanic_complete,paste("C:/Users/mila_/Documents/Master ciencia de dades",
"/Tipología y ciclo de vida de los datos/PRAC 2/titanic_complete.csv",sep=""))
#compruebo los datos
head(Titanic_complete)
#Separación de dataset Train para analisis y de test para la prueba del modelo
Train.f<-Titanic_complete%>%
select(PassengerId,Survived,
Pclass,Title,Sex,Age,Fare,Set_type,Family.unit)%>%
filter(Set_type=="train")
Test.f<-Titanic_complete%>%
select(PassengerId,Survived,Pclass,Title,
Sex,Age,Fare,Set_type,Family.unit)%>%
filter(Set_type=="test")
str(Train.f)
#Separación de dataset Train para analisis y de test para la prueba del modelo
Train.f<-Titanic_complete%>%
select(PassengerId,Survived,
Pclass,Title,Sex,Age,Fare,Set_type,Family.unit)%>%
filter(Set_type=="train")
Test.f<-Titanic_complete%>%
select(PassengerId,Survived,Pclass,Title,
Sex,Age,Fare,Set_type,Family.unit)%>%
filter(Set_type=="test")
str(Train.f)
